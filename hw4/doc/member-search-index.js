memberSearchIndex = [{"p":"Security","c":"Password1","l":"addNumberOfLetter(String, int[])","u":"addNumberOfLetter(java.lang.String,int[])"},{"p":"Security","c":"Password1","l":"bracketControl()"},{"p":"Security","c":"Username","l":"checkIfValidUsername(String, int)","u":"checkIfValidUsername(java.lang.String,int)"},{"p":"Security","c":"Password1","l":"containsUserNameSpirit(String)","u":"containsUserNameSpirit(java.lang.String)"},{"p":"Security","c":"Password2","l":"controlRange()"},{"p":"Security","c":"Password1","l":"get()"},{"p":"Security","c":"Password2","l":"get()"},{"p":"Security","c":"Username","l":"get()"},{"p":"Security","c":"TestClass","l":"helperMethod(String, String, int, int[])","u":"helperMethod(java.lang.String,java.lang.String,int,int[])"},{"p":"Security","c":"Password1","l":"isBalancedPassword()"},{"p":"Security","c":"Password2","l":"isExactDivision(int, int[], int)","u":"isExactDivision(int,int[],int)"},{"p":"Security","c":"Password1","l":"isPalindromePossible(int)"},{"p":"Security","c":"Password1","l":"justLatterAndBracketControl()"},{"p":"Security","c":"TestClass","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"Security","c":"Password1","l":"Password1()","u":"%3Cinit%3E()"},{"p":"Security","c":"Password1","l":"Password1(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"Security","c":"Password2","l":"Password2(int)","u":"%3Cinit%3E(int)"},{"p":"Security","c":"Password1","l":"removeBracketsAndLowerCase()"},{"p":"Security","c":"Password1","l":"set(String)","u":"set(java.lang.String)"},{"p":"Security","c":"Username","l":"set(String)","u":"set(java.lang.String)"},{"p":"Security","c":"Username","l":"size()"},{"p":"Security","c":"Password1","l":"sizeControl()"},{"p":"Security","c":"TestClass","l":"TestClass()","u":"%3Cinit%3E()"},{"p":"Security","c":"Username","l":"Username()","u":"%3Cinit%3E()"},{"p":"Security","c":"Username","l":"Username(String)","u":"%3Cinit%3E(java.lang.String)"}];updateSearchResults();